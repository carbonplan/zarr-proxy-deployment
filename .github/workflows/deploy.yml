name: aws-lambda-deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  SAM_CLI_TELEMETRY: 0 # Disable SAM CLI telemetry
  ZARR_PROXY_STACK_NAME: zarr-proxy-deployment
  ZARR_PROXY_STACK_ENV: prod
  ZARR_PROXY_ENV: '{"ZARR_PROXY_PAYLOAD_SIZE_LIMIT": "6MB"}'

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: zarr-proxy/deployments/aws

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: pangeo-data/zarr-proxy
          path: zarr-proxy
          fetch-depth: 0

      - name: List files
        run: |
          pwd
          ls -la
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Set up Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Cache Yarn dependencies
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('package.json') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install aws-cdk
        run: |
          yarn install

      - name: Cache pip requirements
        uses: actions/cache@v3
        id: pip-cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      # - uses: aws-actions/setup-sam@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Booststrap CDK
        run: |
          yarn cdk bootstrap aws://${{ env.AWS_ACCOUNT_ID }}/us-west-2

      - name: Print CloudFormation template
        run: |
          yarn cdk synth

      - name: Print the diff
        run: |
          yarn cdk diff

      - name: Deploy
        if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'workflow_dispatch'
        run: |
          yarn cdk deploy ${{ env.ZARR_PROXY_STACK_NAME }}-lambda-${{ env.ZARR_PROXY_STACK_ENV }} --require-approval never
